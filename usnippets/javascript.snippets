snippet function "Named function definition" b
function ${1:MyFunc}($2) {
    // ${3:description}
    ${4:code...}
};
$0
endsnippet

snippet fn "Anonymous function definition"
function($1) {
    ${2:code...}
}${3:;}
$0
endsnippet

snippet cl
console.log('$1:', ${2:$1});$0
endsnippet

snippet ce
console.error("$1:", ${2:1});$0
endsnippet

snippet if
if(${1:condition}) {
    ${2:code...}
}
$0
endsnippet

snippet ei "else if"
else if(${1:condition}) {
    ${2:code...}
}
$0
endsnippet

snippet el
else {
    ${1:code...}
}
$0
endsnippet

snippet ter "tertiary conditional"
${1:condition} ? ${2:if true} : ${3:if false};
endsnippet

snippet switch "switch"
switch(${1:expression}) {
    case ${3} :
        ${4}
        break;
    ${0}
    default:
        ${2}
}
endsnippet

snippet case "case"
case ${1} :
    ${2}
    break;
${0}
endsnippet

snippet geti "document.getElementByID"
document.getElement.ByID('$1')${2:;}
endsnippet

snippet getq "document.getQuerySelector"
document.getQuerySelector('$1')${2:;}
endsnippet

snippet getqa "document.getQuerySelectorAll"
document.getQuerySelectorAll('$1')${2:;}
endsnippet

snippet jsons "JSON.stringify"
JSON.stringify(${1:object})${2:;}
endsnippet

snippet d "document"
document.
endsnippet

snippet w "window"
window.
endsnippet

snippet $ "jQuery collection"
$('$1')${2}
endsnippet
snippet $# "jQuery id"
$('#$1')$2
endsnippet

snippet $. "jQuery class"
$('.$1')$2
endsnippet

snippet req "XMLHttpRequest"
var ${1:request} = new XMLHttpRequest();

$1.open(
    '${2:method}',
    '${3:url}',
    ${4:async (true/false)}
);

$1.onload = function() {
    if($1.status >= 200 && $1.status <= 400) {
        // Success
        ${5:code...}
    }
    else {
        ${6:code...}
    }
}

$1.send();$0
endsnippet

#
# Backbone snippets
#

snippet fetch "model/collection.fetch" w
fetch({
    success: function(obj, response) {
        ${1:code...}
    },
    error: function(obj, response) {
        ${2:code...}
    }
});$0
endsnippet
