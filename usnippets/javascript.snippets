snippet function "Named function definition" b
function ${1:MyFunc}($2) {
    // ${3:description}
    ${4:code...}
};
$0
endsnippet

snippet "(\W)fn" "Anonymous function definition" ir
`!p snip.rv = match.group(1)`function($1) {
    ${2:code...}
}`!p if match.group(1)[-1] != '(':
	 snip.rv = ';'`$0
endsnippet

snippet cl
console.log('$1:'${2:`!p snip.rv = ', {}'.format(t[1])`});$0
endsnippet

snippet ce
console.error("$1:", ${2:$1});$0
endsnippet

snippet if
if(${1:condition}) {
    ${2:code...}
}
$0
endsnippet

snippet ei "else if"
else if(${1:condition}) {
    ${2:code...}
}
$0
endsnippet

snippet el
else {
    ${1:code...}
}
$0
endsnippet

snippet ter "tertiary conditional"
${1:condition} ? ${2:if true} : ${3:if false};
endsnippet

snippet switch "switch"
switch(${1:expression}) {
    case ${3}:
        ${4}
        break;
    ${0}
    default:
        ${2}
}
endsnippet

snippet case "case"
case ${1}:
    ${2}
    break;
${0}
endsnippet

snippet "\sv(\w+)" "var {} = value" r
`!p snip.rv = " var {} = ".format(match.group(1))` ${2:this}
endsnippet

snippet geti "document.getElementByID" i
document.getElementById('$1')$2
endsnippet

snippet getq "document.getQuerySelector" i
document.getQuerySelector('$1')$2
endsnippet

snippet getqa "document.getQuerySelectorAll" i
document.getQuerySelectorAll('$1')$2
endsnippet

snippet jsons "JSON.stringify" i
JSON.stringify(${1:object})$2
endsnippet

snippet "(\W)d" "document" ir
`!p snip.rv = match.group(1) + "document."`
endsnippet

snippet "(\W)w" "window" ir
`!p snip.rv = match.group(1) + "window."`
endsnippet

snippet $ "jQuery collection" i
$('$1')${2}
endsnippet

snippet $# "jQuery id" i
$('#$1')$2
endsnippet

snippet $. "jQuery class" i
$('.$1')$2
endsnippet

snippet req "XMLHttpRequest"
var ${1:request} = new XMLHttpRequest();

$1.open(
    '${2:method}',
    '${3:url}',
    ${4:async (true/false)}
);

$1.onload = function() {
	var response = request.responseText;
    if($1.status >= 200 && $1.status <= 400) {
        // Success
        ${5:code...}
    }
    else {
        ${6:code...}
    }
}
$1.send();$0
endsnippet

#
# Backbone snippets
#

snippet fetch "model/collection.fetch" w
fetch({
    success: function(obj, response) {
        ${1:code...}
    },
    error: function(obj, response) {
        ${2:code...}
    }
});$0
endsnippet

snippet BBM "BackBone Model"
Backbone.Model.extend({
	$1
});$0
endsnippet

snippet BBC "BackBone Collection"
Backbone.Collection.extend({
	model: $1,
	url: ${2:baseUrl + 'json/${1/(\w*\.)*(.*)/\L$2s\E/g}'},
});$0
endsnippet

snippet BBV "BackBone View"
Backbone.View.extend({
	$1
});$0
endsnippet

snippet BBR "BackBone Router"
Backbone.Router.extend({
	$1
});$0
endsnippet
